name: Deploy
description: Deploy action for python project hosted in GCP Cloud Run
inputs:
  identity-provider:
    description: Identity Provider
    required: true
  service-account-email:
    description: Service Account Email
    required: true
  project-id:
    description: GCP Project ID
    required: true
  service:
    description: The name of the Cloud Run service
    required: true
  flags:
    description: Cloud Run deploy flags specific to the environment
    required: false
  env-vars:
    description: Environment variables to set in the Cloud Run deploy. (e.g. WEB_API_KEY=value,SOMETHING_ELSE=value)
    required: false
  mounted-secrets:
    description: Cloud run secret mounts. (e.g. /secret/folder/file=secret:latest)
    required: false
  docker-context:
    description: Context for docker Build
    required: false
    default: .
  docker-file:
    description: Path to Dockerfile
    required: false
  docker-build-args:
    description: Environment variables to set in the docker image build. (e.g. VITE_DISCOVER=value,VITE_PRINT_PROXY=value)
    required: false
  region:
    description: GCP region
    default: us-central1
    required: false
  service-now-instance:
    description: the sub address to https://{service-now-instance}.service-now.com
    required: false
  service-now-table:
    description: the parent table name to write to
    required: false
  service-now-system-id:
    description: the child record id to write to
    required: false
  service-now-username:
    description: the service account name
    required: false
  service-now-password:
    description: the service account password
    required: false
  repo-token:
    description: GitHub token (e.g. secrets.GITHUB_TOKEN). This is only required if you are providing the service now inputs
    required: false

runs:
  using: composite
  steps:
    - name: ‚¨áÔ∏è Set up code
      uses: actions/checkout@v4
      with:
          show-progress: false

    - name: üóùÔ∏è Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        create_credentials_file: true
        token_format: access_token
        workload_identity_provider: ${{ inputs.identity-provider }}
        service_account: ${{ inputs.service-account-email }}

    - name: üê≥ Set up Docker Buildx
      id: builder
      uses: docker/setup-buildx-action@v3

    - name: üóùÔ∏è Authenticate Docker to Google Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: us-central1-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: üè∑Ô∏è Extract tags from GitHub
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: us-central1-docker.pkg.dev/${{ inputs.project-id }}/images/${{ inputs.service }}
        tags: |
          type=ref,suffix=-{{sha}},event=branch
          type=ref,prefix=pr-,suffix=-{{sha}},event=pr
          type=semver,pattern={{version}}
          type=raw,value=latest

    - name: üì¶ Build and push image
      uses: docker/build-push-action@v5
      with:
        builder: ${{ steps.builder.outputs.name }}
        tags: ${{ steps.meta.outputs.tags }}
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.docker-file }}
        build-args: ${{ inputs.docker-build-args }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false

    - name: üöÄ Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ inputs.service }}
        image: us-central1-docker.pkg.dev/${{ inputs.project-id }}/images/${{ inputs.service }}:latest
        region: ${{ inputs.region }}
        env_vars: ${{ inputs.env-vars }}
        flags: ${{ inputs.flags }}
        secrets: ${{ inputs.mounted-secrets }}

    - name: üîî Publish deployment worknote
      uses: agrc/service-now-worknote-action@v1
      if: ${{ inputs.service-now-system-id }}
      with:
        repo-token: ${{ inputs.repo-token }}
        username: ${{ inputs.service-now-username }}
        password: ${{ inputs.service-now-password }}
        instance-name: ${{ inputs.service-now-instance }}
        table-name: ${{ inputs.service-now-table }}
        system-id: ${{ inputs.service-now-system-id }}
